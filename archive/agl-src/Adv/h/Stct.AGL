//
//	AGL - Advanced Games Language (C) Oliver Smith/KFS, 1991-1993
//
//	File: Stct.AGL		Eventual Stct.H for AGL v0.9.5
//
//	LMod: oliver 11/06/93	ushort and ulong -> short and long
//

// #defines relating to basic objects
#define	boEXISTS	0x0001			// the item exists
#define	boALIVE		0x0002			// human/mobile
#define	boLIGHT		0x0004			// light source
#define	boGLOWING	0x0004			// above for beings
#define	boINVIS		0x0008			// invisible
#define	boSINVIS	0x0010			// super-invisible
#define	boHEAR		0x0020			// can hear things
#define	boSEE		0x0040			// can see things
#define	boSPEAK		0x0080			// can speak
#define	boMOVE		0x0100			// it can move
#define	boMOVING	0x4000			// IN TRANSIT
#define	boLOCKED	0x8000			// LOCKED

#define	SBOB struct _BOBJ

SDEF _BOBJ {			// Basic object struct
	char	type,state;			// Type of 'presence'
	char	*name,*description;		// Name	
	long	holdsw,myweight,weight;		// Max. contents
	short	holdsn,inv;			// Max. contents & inv. count
unsigned long	flags;				// Any fixed flags
	short	light;				// Light-source count
	SBOB	*nxt,*pre,*in,*own;		// Next, prev, 1st in, owner
	SBOB	*npres;				// Next presence or NULL
	short	tyno;				// Items number within type 
};

#define	ROOM	struct _ROOM
SDEF _ROOM {			// Room object struct
unsigned short	flags;				// Room FIXED flags
	long	tabptr;				// Ptr to T.T. data
	short	ttlines;			// No. of TT lines
};

#define	CRE	struct _BEING	// Creature

#define WE	struct _WE	// related beings
SDEF _WE {	CRE *us,*next,*me;	};

SDEF _BEING {		// Mobile/char struct
	char	*buf;				// Where to put text or NULL
#ifdef AMIGA
struct MsgPort	*rep;				// Notify me here
#endif
unsigned long	flags;				// Flags
	long	sctg;				// Points scd this game
	short	strength,stamina,dext;		// Fators
	short	wisdom,magicpts,wield;		// factors
	short	dextadj;
	WE	fighting,following,snooping,helping;
	short	rec,unum;			// Record/user number
	char	*arr,*dep;			// Arrive/depart strings
	void	*info;				// A bit more
};

#define	LS	struct _LS
SDEF _LS {			// IO Driver Line Status Info 
	char	line;			// Which line am I?
	char	IOlock;			// Device in use?
	char	pre[80];		// Pre-rank description
	char	post[80];		// Post-rank description
	short	m_left,m_used;		// Minutes left on-line/used
};

#define		MALE		0
#define		FEMALE		1

SDEF _HUMAN {		// Player def struct
	char	name[20];			// Player's name
	char	passwd[42];			// password
	char	class;				// *=* unused yet *=*
	char	sex;				// gender (0=m, 1=f)
	char	flags;				// ansi, lf, redo, etc
	char	llen;				// screen width
	char	slen;				// screen length
	char	rdmode;				// room description mode
	char	rank;				// rank no.
	char	experience;			// %age experience
	long	score;				// Score to date.
unsigned short	minutes;			// Max. time per game
unsigned long	plays;				// Times played
unsigned long	tasks;				// Tasks completed
unsigned short	tries;				// Bad tries since last
};

#define	OBJ	struct _OBJ
#define	STATE	struct _STATE
SDEF _OBJ {			// Object (temporary) definition
	short	putto	:	5;	// Where things go
	short	article :	3;	// Is it an in on under?
	short	state	:	8;	// Current state
	char	nstates;		// No. of states
	char	initstate;		// Initial state
	short	idno;			// Object's ID no
	short	adj;			// Adjective. -1 = none
	short	flags;			// Fixed flags
	short	mobile;			// Mobile character
	STATE	*states;		// Ptr to states!
};

SDEF _STATE {			// State description
unsigned long	weight;			// In grammes
unsigned long	value;			// Whassit worth?
	short	strength;		// How strong is it?
	short	damage;			// Amount of damage
	long	descrip;		// ptr to descrp in file
	short	flags;			// State flags
};

#define	MOB	struct _MOB
SDEF _MOB {			// Mobile Character Entry
	short	dmove;				// Move to when it dies
	short	verb;				// ACT verb
	char	dead;				// State flags
	char	speed,travel,fight,act,wait;	// speed & %ages
	char	fear,attack;			// others
unsigned short	flags;				// -- none yet --
unsigned short	rank;				// Rank equiv
	long	arr,dep,flee,hit,miss,death;	// Various UMsgs
};

#define	DAEMON	struct _DAEMON
SDEF _DAEMON  {			// AMan Daemon structure
	DAEMON	*nxt,*prv;	// Structured list info
	short	own,count,num;	// Owner, Count and "verb" number
	long	val[2],typ[2];	// Noun1 and Noun2
};

//	AMUL MODIFIED STRUCTURES

#ifdef AMIGA
SDEF Aport {			// Message structure
	struct	Message msg;
	long	type,from,data,p1,p2,p3,p4;
	char	*ptr;
};
#endif

#define	VERB	struct	_VERB
#define	SLOTS	struct	_SLOTS
#define VBCNA	struct	_VBCNA
SDEF _VERB {			// Verb def struct
unsigned short	flags;			// Travel? etc...
	char	sort[4];		// Sort method...(yawn)
	char	sort2[4];		// Sort #2!
	short	ents;			// No. of slot entries
	SLOTS	*ptr;			// Pointer to slots tab
};

SDEF _SLOTS {			// Slot table def
	char	wtype[4];		// Word type expected
	long	slot[4];		// List of slots
	short	ents;			// No. of entries
	VBCNA	*ptr;			// Points to Verb Table
};

SDEF _VBCNA {			// Verb condition & action line
	short	condition;		// Condition
	short	action;			// #>0=action, #<0=room
	long	*pptr;			// Param ptr; -1=none
};

#define	RANK	struct _RANK
SDEF _RANK {			// Rank information
	char	male[RANKL];		// chars for male descrp
	char	female[RANKL];		// Women! Huh!
	long	score;			// Score to date
	short	strength;		// How strong is he?
	short	stamina;		// Stamina
	short	dext;			// Dexterity
	short	wisdom;			// Wisdom
	short	experience;		// Experience
	short	magicpts;		// Magic points
	long	maxweight;		// Maximum weight
	short	numobj;			// Max. objects carried
	short	minpksl;		// Min. pts for killin
	short	tasks;			// Tasks needed for level
	char	prompt[12];		// Prompt 4 this rank
};

#define	TT	struct _TT
SDEF _TT {			// TT Entry
	char	*word;			// Verb no.
	short	condition;		// Condition
	short	action;			// #>0=action, #<0=room
	long	*pptr;			// Param ptr. -1 = none
};

#define	MOBTAB	struct _MOBTAB
SDEF _MOBTAB {			// Mobile table entry
	union	{
		SBOB	*bob;		// Pointer to a bob
		long	objno;		// Owner object
	} it;
	short	speed;			// Secs/turn
	short	count;			// Time till next
unsigned short	pflags;			// Player style flags
};

